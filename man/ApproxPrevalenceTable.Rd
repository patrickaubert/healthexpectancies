% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ApproxPrevalenceTable.R
\name{ApproxPrevalenceTable}
\alias{ApproxPrevalenceTable}
\title{Transforms a table with prevalences by age brackets into a table with (smoothed) prevalences by age}
\usage{
ApproxPrevalenceTable(
  tab,
  agecuts,
  agemin,
  agemax,
  weights.tab = NULL,
  categories = c("categ"),
  option = ""
)
}
\arguments{
\item{tab}{a dataframe containing categorisation variables (year, sex, categ) and prevalences by age bracket}

\item{agecuts}{a vector with age defining the age brackets (minimum age in each age bracket)}

\item{agemin}{minimum age in the output table}

\item{agemax}{maximum age in the output table}

\item{weights.tab}{a dataframe with weights (ie population) by age and some of the categorisation variables of the 'tab' dataframe}

\item{categories}{a vector of names of variables of the 'tab' dataframe, representing categories}

\item{option}{maximum age in the output table}
}
\value{
a table containing the same categorisation variables than the input table, plus prevalences by age
}
\description{
Given a vector of prevalences by age brackets and the vector of age cuts (which defines the age brackets),
the function returns a vector of prevalences at all ages.
The calculation minimises the sum of squares of second-differences of prevalences
by age, under the constraint that average prevalences by age brackets
(weight according to the 'weight' vector, usually the vector of population size at each age)
are equal to the 'prevalence' input vector.
}
\details{
Note : Second-differences rather than first-differences are used
in the minimisation function, since prevalences according to age are usually parabolic.
}
\examples{
prevalenceApprox(prevalence = (FRDreesAPA2017 \%>\% filter(sex=="female",typepresta=="APA Ã  domicile"))$prevalence, agecuts=c(seq(60,95,5)), agemin=60, agemax=100, weight=(FRInseePopulation \%>\% filter(sex=="female",year==2018,age0101>=60) \%>\% arrange(age0101))$popx)
prevalenceApprox(prevalence = (FRDreesAPA \%>\% filter(year==2018,sex=="male",typepresta=="APA Ã  domicile"))$prevalence, agecuts=c(seq(60,90,5)), agemin=60, agemax=100, weight=(FRInseePopulation \%>\% filter(sex=="male",year==2019,age0101>=60) \%>\% arrange(age0101))$popx)
}
