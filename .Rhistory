for (k in 1:NROW(categories)) {tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
View(tab)
categories.w <- intersect( names(weights.tab), categories)
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories.w)) {tab[,categories.w[k]] <- paste0("#",k,tab[,categories.w[k]],"#")}
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
for (k in 1:NROW(categories.w)) {weights.tab[,categories.w[k]] <- paste0("#",k,weights.tab[,categories.w[k]],"#")}
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
View(tab)
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
weights.tab = pop2 %>% rename(year=annee)
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
View(tab)
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
weights.tab = pop2 %>% rename(year=annee)
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
View(tab)
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
View(tab)
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
for (k in 1:NROW(categories.w)) {weights.tab[,categories.w[k]] <- paste0("#",k,weights.tab[,categories.w[k]],"#")}
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
View(weights.tab)
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
name.prev
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
weights.tab = pop2 %>% rename(year=annee)
categories = c("incap")
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
categories <- intersect( names(tab), unique( c( categories, "year","sex","categ") ) )
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
name.prev
categories
categories.w <- intersect( names(weights.tab), categories)
name.agew <- names(weights.tab)[grepl("^(A|a|â)ge",names(weights.tab))]
name.w <- names(weights.tab)[!(names(weights.tab) %in% c(categories.w,name.agew))]
categories.w
name.agew
name.w
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
for (k in 1:NROW(categories.w)) {weights.tab[,categories.w[k]] <- paste0("#",k,weights.tab[,categories.w[k]],"#")}
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
cases <- tab[ , c("categloc","categ.w")] %>% distinct()
View(cases)
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
data.frame(
categloc = rep(cases$categloc[i]),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
option = ""
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
data.frame(
categloc = rep(cases$categloc[i]),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
agecuts
agecuts =cut(agefin, c(seq(50,85,5),Inf), include.lowest = TRUE, right=FALSE)
agecuts =cut(50:99, c(seq(50,85,5),Inf), include.lowest = TRUE, right=FALSE),
View(txincap)
agecuts =seq(50,85,5)
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
data.frame(
categloc = rep(cases$categloc[i]),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
data.frame(
categloc = rep(cases$categloc[i],(agemax-agemin+1)),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
i<-5
weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]
cases$categ.w[i]
c(name.w)
weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]
cases$categ.w[i]
View(tab)
categories.w
categories
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
weights.tab = pop2 %>% rename(year=annee)
categories = c("incap")
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
categories <- intersect( names(tab), unique( c( categories, "year","sex","categ") ) ) %>% arrange()
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
categories <- intersect( names(tab), unique( c( categories, "year","sex","categ") ) )
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
categories.w <- categories[categories %in% names(weights.tab) )
categories.w <- categories[categories %in% names(weights.tab) ]
categories.w
categories
name.agew <- names(weights.tab)[grepl("^(A|a|â)ge",names(weights.tab))]
name.w <- names(weights.tab)[!(names(weights.tab) %in% c(categories.w,name.agew))]
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
for (k in 1:NROW(categories.w)) {weights.tab[,categories.w[k]] <- paste0("#",k,weights.tab[,categories.w[k]],"#")}
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
cases <- tab[ , c("categloc","categ.w")] %>% distinct()
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
data.frame(
categloc = rep(cases$categloc[i],(agemax-agemin+1)),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
i<-5
weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]
cases$categ.w[i]
View(weights.tab)
View(tab)
unique(weights.tab$categ.w)
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
categories = c("incap")
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
categories <- intersect( names(tab), unique( c( categories, "year","sex","categ") ) )
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
categories.w <- categories[categories %in% names(weights.tab) ]
name.agew <- names(weights.tab)[grepl("^(A|a|â)ge",names(weights.tab))]
name.w <- names(weights.tab)[!(names(weights.tab) %in% c(categories.w,name.agew))]
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {
tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")
if (categories[k] %in% names(weights.tab)) {weights.tab[,categories[k]] <- paste0("#",k,weights.tab[,categories[k]],"#")}
}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
View(tab)
View(weights.tab)
weights.tab = pop2 %>% rename(year=annee)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
View(weights.tab)
View(tab)
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {
tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")
if (categories[k] %in% names(weights.tab)) {weights.tab[,categories[k]] <- paste0("#",k,weights.tab[,categories[k]],"#")}
}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
View(tab)
View(weights.tab)
View(tab)
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
View(weights.tab)
cases <- tab[ , c("categloc","categ.w")] %>% distinct()
# == call approximation function for every category, sex and year
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
data.frame(
categloc = rep(cases$categloc[i],(agemax-agemin+1)),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
i<-5
weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]
View(weights.loc)
name.w
tab = txincap %>% filter(sex %in% c("male","female")) %>% rename(year=annee)
weights.tab = pop2 %>% rename(year=annee)
categories = c("incap")
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
categories <- intersect( names(tab), unique( c( categories, "year","sex","categ") ) )
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
categories.w <- categories[categories %in% names(weights.tab) ]
name.agew <- names(weights.tab)[grepl("^(A|a|â)ge",names(weights.tab))]
name.w <- names(weights.tab)[!(names(weights.tab) %in% c(categories.w,name.agew))]
name.w
name.agew
name.prev
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {
tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")
if (categories[k] %in% names(weights.tab)) {weights.tab[,categories[k]] <- paste0("#",k,weights.tab[,categories[k]],"#")}
}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
cases <- tab[ , c("categloc","categ.w")] %>% distinct()
i<-19
weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]
truc<-data.frame(
categloc = rep(cases$categloc[i],(agemax-agemin+1)),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
cases$categloc[i]
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)]
NROW(prevalence)
agecuts
NROW(weights.loc)
(agemax-agemin+1)
View(tab)
pop3 <- bind_rows(
pop2 %>%  mutate(sex = recode(sexe, "M"="male", "F"="female")) %>% select(-sexe),
pop2 %>%
select(-sexe) %>%
group_by(annee,agefin) %>% summarise_all(sum) %>% ungroup() %>%
mutate(sex = "all")
)
pop3 <- bind_rows(
pop2 ,
pop2 %>%
select(-sex) %>%
group_by(annee,agefin) %>% summarise_all(sum) %>% ungroup() %>%
mutate(sex = "all")
)
txincap <- txincap %>%
filter(age %in% c("[50,55)","[55,60)","[60,65)","[65,70)",
"[70,75)","[75,80)", "[80,85)" ,"[85,Inf]"))
weights.tab = pop3 %>% rename(year=annee)
categories = c("incap")
tab = txincap %>% rename(year=annee)
tab <- as.data.frame(tab)
if (!is.null(weights.tab)) { weights.tab <- as.data.frame(weights.tab) }
categories <- intersect( names(tab), unique( c( categories, "year","sex","categ") ) )
name.prev <- names(tab)[!(names(tab) %in% categories) & !(grepl("^(A|a|â)ge",names(tab)))]
categories.w <- categories[categories %in% names(weights.tab) ]
name.agew <- names(weights.tab)[grepl("^(A|a|â)ge",names(weights.tab))]
name.w <- names(weights.tab)[!(names(weights.tab) %in% c(categories.w,name.agew))]
if (NROW(categories)==0) { tab$categloc <- rep("#",nrow(tab))
} else {
for (k in 1:NROW(categories)) {
tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#")
if (categories[k] %in% names(weights.tab)) {weights.tab[,categories[k]] <- paste0("#",k,weights.tab[,categories[k]],"#")}
}
tab <- tab %>% unite(categloc,all_of(categories),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { tab$categ.w <- rep("#",nrow(tab))
} else {
tab <- tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
if (NROW(categories.w)==0) { weights.tab$categ.w <- rep("#",nrow(weights.tab))
} else {
weights.tab <- weights.tab %>% unite(categ.w,all_of(categories.w),sep="", remove = FALSE)
}
# == list of all categories
cases <- tab[ , c("categloc","categ.w")] %>% distinct()
approxloc <- function(i) {
if (is.null(weights.tab)) { weights.loc <- rep(1,(agemax-agemin+1))
} else { weights.loc <- weights.tab[weights.tab$categ.w == cases$categ.w[i],c(name.w)]   }
if (option == "polynomial") {
} else {
truc<-data.frame(
categloc = rep(cases$categloc[i],(agemax-agemin+1)),
age = c(agemin:agemax),
prevalence = prevalenceApprox(
prevalence = tab[tab$categloc == cases$categloc[i],c(name.prev)],
agecuts = agecuts, agemin = agemin, agemax = agemax,
weight = weights.loc ),
stringsAsFactors = FALSE
)
}
}
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
View(tabout)
for (j in c(1:NROW(categories))) {
tabout[,categories[j]] <- str_extract(tabout$categloc,paste0("(?<=#",j,").*(?<=#)"))
}
View(tabout)
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
categories
j<-2
View(tabout)
for (j in c(1:NROW(categories))) {
tabout[,categories[j]] <- str_extract(tabout$categloc,paste0("(?<=#",j,")[^#]*(?<=#)"))
}
View(tabout)
tabout <- do.call("bind_rows",lapply(c(1:nrow(cases)),approxloc))
for (j in c(1:NROW(categories))) {
tabout[,categories[j]] <- str_extract(tabout$categloc,paste0("(?<=#",j,")[^#]*(?=#)"))
}
View(tabout)
load_all()
essai <- ApproxPrevalenceTable(
tab = txincap %>% rename(year=annee),
agecuts =seq(50,85,5),  agemin = 50, agemax = 99,
weights.tab = pop3 %>% rename(year=annee),
categories = c("incap"))
categories
names(tabout)
name.prev
load_all()
essai <- ApproxPrevalenceTable(
tab = txincap %>% rename(year=annee),
agecuts =seq(50,85,5),  agemin = 50, agemax = 99,
weights.tab = pop3 %>% rename(year=annee),
categories = c("incap"))
View(essai)
dirdata <- "C:/Users/PA/Documents/R/Projets/Evolution APA/"
prevalenceAPA <- read_csv2(paste0(dirdata,"data/prevalences par âges_yc PSD.csv")) %>%
filter(!(grepl("^APA",prestation) & (gir=="Ensemble") &
(recale_gir==FALSE) & (annee>=2010))) %>%
filter( grepl("^APA",prestation) & (lieu=="ensemble") &
(gir=="Ensemble") & (decomp6age) ) %>%
select(annee,age,prevalence)
popnew <- read_csv2(paste0(dirdata,"data-raw/donnees_pyramide_act.csv"))
names(popnew) <- tolower(names(popnew))
pop <- popnew %>%
rename(agefin = age) %>%
mutate(annee = annee-1) %>%
filter(agefin>=60,annee>=2000) %>%
select(-sexe) %>%
group_by(annee,agefin) %>% summarise_all(sum) %>% ungroup()
prevalisse <- function(an) {
data.frame(
annee = rep(an,(max(pop$agefin)-60+1)),
age = c(60:max(pop$agefin)),
prevalence = prevalenceApprox(
prevalence = prevalenceAPA[prevalenceAPA$annee == an,]$prevalence,
agecuts = seq(60, 85,  5),  agemin = 60,  agemax = max(pop$agefin),
weight = pop[(pop$annee == an) ,]$pop    )
,
stringsAsFactors = FALSE
)
}
prevalApproxAPA2 <- do.call("rbind",
lapply(unique(prevalenceAPA$annee),
function(a){prevalisse(a)}) )
View(prevalApproxAPA2)
names(prevalenceAPA)
prevalApproxAPA <- ApproxPrevalenceTable(
tab = prevalenceAPA %>% rename(year=annee),
agecuts =seq(60,85,5),  agemin = 60, agemax = max(pop$agefin),
weights.tab = pop %>% rename(year=annee)) %>%
rename(annee=year)
View(prevalApproxAPA)
View(prevalApproxAPA2)
load_all()
document()
build()
document()
load_all()
load_all()
load_all()
essai <- ApproxPrevalenceTable(
tab = txincap %>% rename(year=annee),
agecuts =seq(50,85,5),  agemin = 50, agemax = 99,
weights.tab = pop3 %>% rename(year=annee),
categories = c("incap"))
View(essai)
essai <- ApproxPrevalenceTable(
tab = txincap %>% rename(year=annee),
agecuts =seq(50,85,5),  agemin = 50, agemax = 99,
weights.tab = pop3 %>% rename(year=annee),
categories = c("incap"),
option="polynomial")
agemin
agecuts
agebracket <- cut(c(agemin:agemax), breaks = c(agecuts,Inf), include.lowest = TRUE, right = FALSE)
agebracket
unique(agebracket)
load_all()
essai <- ApproxPrevalenceTable(
tab = txincap %>% rename(year=annee),
agecuts =seq(50,85,5),  agemin = 50, agemax = 99,
weights.tab = pop3 %>% rename(year=annee),
categories = c("incap"),
option="polynomial")
load_all()
essai <- ApproxPrevalenceTable(
tab = txincap %>% rename(year=annee),
agecuts =seq(50,85,5),  agemin = 50, agemax = 99,
weights.tab = pop3 %>% rename(year=annee),
categories = c("incap"),
option="polynomial")
View(essai)
load_all()
document()
build()
