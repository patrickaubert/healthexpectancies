sex_to_french <- setNames(names(sexe_to_english),sexe_to_english) %>% as.list()
# taux de retraités
txretr <- retrstatfr::txretr %>%
select(age,annee,txretr,sexe) %>%
rename(year=annee,sex=sexe) %>%
mutate(sex = recode(sex, !!! sexe_to_english))
txincap <- healthexpectancies::FRGaliEUSilc
pop <- healthexpectancies::FRInseePopulationForecast2021 %>%
filter(geo=="france",type.obs=="observed",age0101>=20) %>%
mutate(year=year-1) %>%
rename(agefin=age0101,popx=popx0101) %>%
select(-geo,-type.obs)
qmort_t69 <- healthexpectancies::FRInseeMortalityrates_t69 %>%
filter(age>=50,def.age=="current age (approx)",year>=2004,year<=2020) %>%
rename(annee=year,sexe=sex) %>%
select(-def.age) %>%
mutate(sexe = recode(sexe,"male"="hommes","female"="femmes","all"="ensemble"),
ageq = 5*floor(age/5))
qmort_t69lisse <- bind_rows(
qmort_t69 %>% mutate(annee=annee-1),
qmort_t69,
qmort_t69 %>% mutate(annee=annee+1)
) %>%
filter(annee>=2004,annee<=2020) %>%
group_by(annee,age,ageq,sexe) %>% summarise_all(mean) %>% ungroup()
qmort <- bind_rows(
qmort_t69 %>% mutate(lissage.mortalite="non lissé") %>% filter(annee<=2020),
qmort_t69lisse %>% mutate(lissage.mortalite="lissé")
) %>%
filter(annee>=2008,annee<=2020,age>=50) %>%
select(-ageq) %>%
rename(year=annee,sex=sexe) %>%
mutate(sex = recode(sex, !!! sexe_to_english))
tab_pour_edrsi <- bind_rows(
qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé"),
qmort  %>%
left_join(txincaplisse %>%  filter(age>=50), by = c("year","sex","age"))%>%
left_join(txretr, by = c("year","sex","age"))
) %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr,
incap!="retraite" ~ (1 - prevalence) * txretr     )) %>%
select(-txretr,-prevalence) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr,
incap!="retraite" ~ (1 - prevalence) * txretr     )) %>%
select(-txretr,-prevalence) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) %>%
select(-txretr,-prevalence) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
)
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr,-prevalence) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex)
View(tab_pour_edrsi)
load_all()
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex)
categories=c("incap","lissage.mortalite","lissage.prevalence")
tab<-tab_pour_edrsi
# impose data.Frame format
tab <- as.data.frame(tab)
# remove columns with missing values
tab <- tab[,colSums(is.na(tab))==0]
# find variations of sex/year names
namesex <- NA
if (!("sex" %in% names(tab)) & ("sexe" %in% tolower(names(tab)))) {
namesex <- names(tab)[tolower(names(tab))=="sexe"]
namesex <- namesex[1]
names(tab)[names(tab)==namesex] <- "sex"
}
nameyear <- NA
if (!("year" %in% names(tab)) & grepl("^(an|annee)$",tolower(names(tab)))) {
nameyear <- names(tab)[grepl("^(an|annee)$",tolower(names(tab)))]
nameyear <- nameyear[1]
names(tab)[names(tab)==nameyear] <- "year"
}
namesex
nameyear
View(tab)
View(tab)
tab<-tab_pour_edrsi
# impose data.Frame format
tab <- as.data.frame(tab)
# remove columns with missing values
tab <- tab[,colSums(is.na(tab))==0]
# find variations of sex/year names
namesex <- NA
if (!("sex" %in% names(tab)) & ("sexe" %in% tolower(names(tab)))) {
namesex <- names(tab)[tolower(names(tab))=="sexe"]
namesex <- namesex[1]
names(tab)[names(tab)==namesex] <- "sex"
}
nameyear <- NA
if (!("year" %in% names(tab)) & (NROW(names(tab)[grepl("^(an|annee)$",tolower(names(tab)))]>=1))) {
nameyear <- names(tab)[grepl("^(an|annee)$",tolower(names(tab)))]
nameyear <- nameyear[1]
names(tab)[names(tab)==nameyear] <- "year"
}
namesex
nameyear
View(tab)
# if 'categories' is provided, a 'categ' variable is first created
categories <- categories[!(categories %in% c("sex","year"))]
categories.true <- categories[categories != ""]
if (NROW(categories.true)>=1) {
# if 'categories' is provided and a 'categ' variable is in the 'tab' dataframe, the latter is ignored
if ("categ" %in% names(tab)) {
if (NROW(categories)==1) {
warning(paste0("The 'categ' variable in the 'tab' dataframe will be ignored. ",
categories," variable is used instead."  ))
} else  if (NROW(categories)>1) {
warning(paste0("The 'categ' variable in the 'tab' dataframe will be ignored. ",
paste(categories,collapse = ", ")," variables are used instead."  ))
}
tab <- tab[ , names(tab)[!(names(tab) == "categ")]]
}
for (k in 1:NROW(categories)) { tab[,categories[k]] <- paste0("#",k,tab[,categories[k]],"#") }
tab <- tab %>% unite(categ,all_of(categories),sep="")
}
# if 'categories' is provided, a function to restore the initial names and values of them
restore_categories <- function(tabloc) {
if (NROW(categories.true)>=1)  {
for (j in c(1:NROW(categories))) {
tabloc[,categories[j]] <- str_extract(tabloc$categ,paste0("(?<=#",j,")[^#]*(?=#)"))
}
tabloc <- tabloc[ , names(tabloc)[!(names(tabloc) == "categ")]]
} else {
tabloc
}
} # and of restore_categories
# if 'sex' and/or 'year' and/or 'categ' are in the input dataset, calculations is made for each values of these 2 variables
# NB: 'categ' is an undefinite category variable (to be defined by user)
if ("sex" %in% names(tab)) {
classsex <- unique(tab$sex)
#tab <- tab %>% mutate(sex = as.factor(sex))
tab$sex <- as.factor(tab$sex)
if (NROW(classsex)>1)  {
bysex <- function(s){ CompleteDFLEtable(tab[tab$sex == s,]) }
return( do.call(rbind,lapply(classsex,bysex)) %>% restore_categories() )
}
}
if ("categ" %in% names(tab)) {
classcateg <- unique(tab$categ)
#tab <- tab %>% mutate(categ = as.factor(categ))
tab$categ <- as.factor(tab$categ)
if (NROW(classcateg)>1)  {
bycateg <- function(cat){ CompleteDFLEtable(tab[tab$categ == cat,]) }
return( do.call(rbind,lapply(classcateg,bycateg)) %>% restore_categories() )
}
}
if ("year" %in% names(tab)) {
classyear <- unique(tab$year)
#tab <- tab %>% mutate(year = as.numeric(year))
tab$year <- as.numeric(tab$year)
if (NROW(classyear)>1)  {
byyear <- function(y){ CompleteDFLEtable(tab[tab$year == y,]) }
return( do.call(rbind,lapply(classyear,byyear)) )
}
}
# creates no variable if age is missing in the input dataset
# NB: in the sullivan manuel, 'x' means 'age'
if (!("age" %in% names(tab)) & ("x" %in% names(tab))) { tab$age <- tab$x }
if (!("age" %in% names(tab))) { return(tab) }
#tab <- tab %>% mutate(age = as.numeric(age))
tab$age <- as.numeric(tab$age)
tab <- tab[order(tab$age),]
# adding agewidth : should be equal to 1 if all ages are in the input dataset
if (("age" %in% names(tab)) & !("agewidth" %in% names(tab))) {
tab$agewidth <- c( tail(tab$age,-1), (tail(tab$age,1)+1)) - tab$age
}
# adding central death rate (mx), from Mid-year population (Px) and	No. deaths (Dx)
if (("Px" %in% names(tab)) & ("Dx" %in% names(tab)) & !("mx" %in% names(tab))) {
tab$mx <- tab$Dx / tab$Px
}
# =================== mx <-> qx ====================
# adding conditional probability of death (qx), from central death rate (mx)
if (("mx" %in% names(tab)) & !("qx" %in% names(tab))) {
tab$qx <- tab$mx * tab$agewidth / (1 + 0.5 * tab$agewidth * tab$mx)
}
# --- alternative : adding central death rate (mx), from conditional probability of death (qx)
if (("qx" %in% names(tab)) & !("mx" %in% names(tab))) {
tab$mx <- tab$qx / tab$agewidth / (1 - 0.5 * tab$qx)
}
# =================== qx -> lx ====================
# adding number of survivors to age x, from conditional probability of death
if (("qx" %in% names(tab)) & !("lx" %in% names(tab))) {
tab$lx <- 100000 * cumprod(c(1, 1 - utils::head(tab$qx,-1) ))
}
# =================== lx -> Lx ====================
# adding person years lived at age x, from number of survivors to age x
if (("lx" %in% names(tab)) & !("Lx" %in% names(tab))) {
w1 <- c( 0.2, rep(0.5, nrow(tab)-1) )
tab$Lx <- ( w1 * tab$lx +
(1 - w1) * c( utils::tail(tab$lx,-1), 0) ) * tab$agewidth
tab$Lx[nrow(tab)] <- tab$lx[nrow(tab)] / tab$mx[nrow(tab)]
}
# =================== Lx -> Tx ====================
# adding total number of years lived  from x, from person years lived at age x
if (("Lx" %in% names(tab)) & !("Tx" %in% names(tab))) {
tab$Tx <- rev( cumsum( rev(tab$Lx) ) )
}
# =================== lx, Tx -> ex ====================
# adding total life expectancy, from total number of years lived and numbers surviving to age x
if (("lx" %in% names(tab)) & ("Tx" %in% names(tab)) & !("ex" %in% names(tab))) {
tab$ex <- tab$Tx / tab$lx
}
# =================== Lx, pix -> DFLx, DLx ====================
# adding person-years lived without disability (DFLx), from person years lived at age x (Lx) and proportion with disability (pix)
if (("Lx" %in% names(tab)) & ("pix" %in% names(tab)) & !("DFLx" %in% names(tab))) {
tab$DFLx <- tab$Lx * (1 - tab$pix)
}
# adding person-years lived with disability (DLx), from person years lived at age x (Lx) and proportion with disability (pix)
if (("Lx" %in% names(tab)) & ("pix" %in% names(tab)) & !("DLx" %in% names(tab))) {
tab$DLx <- tab$Lx * tab$pix
}
# =================== DFLx -> DFTx ====================
# adding total years lived without disability from age x (DFTx), from person years lived without disability (DFLx)
if (("DFLx" %in% names(tab)) & !("DFTx" %in% names(tab))) {
tab$DFTx <- rev( cumsum( rev(tab$DFLx) ) )
}
# =================== lx, DFTx -> DFLEx ====================
# adding disability-free life expectancy (DFLEx), from total years lived without disability from age x (DFTx) and numbers surviving to age x
if (("lx" %in% names(tab)) & ("DFTx" %in% names(tab)) & !("DFLEx" %in% names(tab))) {
tab$DFLEx <- tab$DFTx / tab$lx
}
# =================== DFLEx <-> DLEx ====================
# adding in-disability life expectancy (DLEx), from life expectancy (ex) and disability-free life expectancy (DFLEx)
if (("DFLEx" %in% names(tab)) & ("ex" %in% names(tab)) & !("DLEx" %in% names(tab))) {
tab$DLEx <- tab$ex - tab$DFLEx
}
# --- alternative : adding disability-free life expectancy (DFLEx), from life expectancy (ex) and in-disability life expectancy (DLEx)
if (!("DFLEx" %in% names(tab)) & ("ex" %in% names(tab)) & ("DLEx" %in% names(tab))) {
tab$DFLEx <- tab$ex - tab$DLEx
}
# =================== DFLEx <-> pctDFLEx ====================
# adding proportion of life spent disability-free (pctDFLEx), from ratio of DFLE and LE at each age x
if (("DFLEx" %in% names(tab)) & ("ex" %in% names(tab)) & !("pctDFLEx" %in% names(tab))) {
tab$pctDFLEx <- 100 * tab$DFLEx / tab$ex
}
# --- alternative : adding disability-free life expectancy (DFLEx), from proportion of life spent disability-free (pctDFLEx) and life-expectancy at each age x
if (!("DFLEx" %in% names(tab)) & ("ex" %in% names(tab)) & ("pctDFLEx" %in% names(tab))) {
tab$DFLEx <- tab$pctDFLEx/100 * tab$ex
if (!("DLEx" %in% names(tab))) { tab$DLEx <- tab$ex - tab$DFLEx }
}
# =================== DLEx <-> pctDLEx ====================
# adding proportion of life spent with disability (pctDLEx), from ratio of DLE and LE at each age x
if (("DLEx" %in% names(tab)) & ("ex" %in% names(tab)) & !("pctDLEx" %in% names(tab))) {
tab$pctDLEx <- 100 * tab$DLEx / tab$ex
}
# --- alternative : adding with disability life expectancy (DLEx), from proportion of life spent with disability (pctDLEx) and life-expectancy at each age x
if (!("DLEx" %in% names(tab)) & ("ex" %in% names(tab)) & ("pctDLEx" %in% names(tab))) {
tab$DLEx <- tab$pctDLEx/100 * tab$ex
}
# =================== lx, Lx, DFLEx -> pix (& DFLx, DFTx, DLx) ====================
# --- alternative : adding prevalences (pix), from DFLEx
if (("lx" %in% names(tab)) & ("Lx" %in% names(tab)) & ("DFLEx" %in% names(tab)) & !("pix" %in% names(tab)) & !("DFLx" %in% names(tab)) & !("DFTx" %in% names(tab))) {
tab$DFTx <-  tab$DFLEx * tab$lx
tab$DFLx <- tab$DFTx - c( tail(tab$DFTx,-1) , 0 )
tab$pix <-  ( 1 - tab$DFLx / tab$Lx )
tab$DLx <- tab$Lx * tab$pix
}
# =================== DLx -> MeanDAx, MedianDAx, ModalDAx ====================
# adding mean conjonctural age of life with disability (MeanDAx) from person-years lived at age x (DLx)
if (("DLx" %in% names(tab)) & !("MeanDAx" %in% names(tab))) {
MeanDAx <- function(n) { sum( tab$DLx[n:nrow(tab)] * tab$age[n:nrow(tab)]) / sum(tab$DLx[n:nrow(tab)])}
tab$MeanDAx <- sapply( c(1:nrow(tab)) , MeanDAx)
}
# adding median conjonctural age of life with disability (MedianDAx) from person-years lived at age x (DLx)
if (("DLx" %in% names(tab)) & !("MedianDAx" %in% names(tab))) {
MedianDAx <- function(n) {
tab2 <- tab[c(n:nrow(tab)),]
tab2$cumDLx <- cumsum(tab2$DLx)
return(min(tab2[tab2$cumDLx >= sum(tab2$DLx)/2,"age"]))
}
tab$MedianDAx <- sapply( c(1:nrow(tab)) , MedianDAx)
}
# adding modal conjonctural age of life with disability (ModalDAx) from person-years lived at age x (DLx)
if (("DLx" %in% names(tab)) & !("ModalDAx" %in% names(tab))) {
ModalDAx <- function(n) {
tab2 <- tab[c(n:nrow(tab)),]
return(min(tab2[tab2$DLx == max(tab2$DLx),"age"]))
}
tab$ModalDAx <- sapply( c(1:nrow(tab)) , ModalDAx)
}
View(tab)
namesex
(!is.na(namesex) & (nchar(namesex)>=1))
names(tab)[names(tab)=="sex"]
names(tab)[names(tab)=="sex"] <- namesex
View(tab)
(!is.na(nameyear) & (nchar(nameyear)>=1))
names(tab)[names(tab)=="year"] <- nameyear
View(tab)
load_all()
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
filter(annee==2008,sexe=="all")
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
filter(annee==2008,sexe=="all") %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
load_all()
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
filter(annee==2008,sexe=="all") %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
filter(annee==2008,sexe=="all")
View(tab_pour_edrsi)
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
filter(annee==2008,sexe=="all") %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
load_all()
tab_pour_edrsi <-  qmort  %>%
left_join(txretr,  by = c("year","sex","age"))  %>%
mutate(incap = "retraite",
lissage.prevalence = "non lissé") %>%
mutate(txretr = case_when(
!is.na(txretr) ~ txretr,
age<50 ~ 0,
age>=70 ~ 1    ),
pix = case_when(
incap=="retraite" ~ txretr) ) %>%
select(-txretr) %>%
arrange(incap,sex,lissage.mortalite,lissage.prevalence,year,age) %>%
rename(annee=year,sexe=sex) %>%
filter(annee==2008,sexe=="all") %>%
CompleteDFLEtable(categories=c("incap","lissage.mortalite","lissage.prevalence"))
View(tab_pour_edrsi)
125+125+13+2+2+15
23000-13850-2000-2550
23000-13850-2000-2550-50
13850+2000+2550
(605+4049)/5431
0.85*4714.23
(4049)/5431
17000*0.016/3
17000*0.01
