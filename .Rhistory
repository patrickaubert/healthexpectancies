description_sullivan,
overwrite = T)
document()
library(devtools)
library(readxl)
library(openxlsx)
library(tidyverse)
load_all()
FRInseePopulationForecast2021 <- bind_rows(
read_csv2("data-raw/donnees_pyramide_act_2022.csv") %>% mutate(geo="france",type="observed"),
read_csv2("data-raw/donnees_pyramide_proj_2022.csv") %>% mutate(geo="france",type="forecasted")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx0101 = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex) %>% recode("M" = "male", "F" = "female"),
geo = as.factor(geo) )
View(FRInseePopulationForecast2021)
urlproj2021 <- "https://www.insee.fr/fr/statistiques/fichier/5894083/00_central.xlsx"
urlproj2021 <- "https://www.insee.fr/fr/statistiques/fichier/5894083/00_central.xlsx"
projMale <- openxlsx::read.xlsx(urlproj2021, sheet = "populationH", rows=c(2,102:108))
names(projMale)[1] <- "age0101"
View(projMale)
View(FRInseePopulationForecast2021)
View(projMale)
urlproj2021 <- "https://www.insee.fr/fr/statistiques/fichier/5894083/00_central.xlsx"
projMale <- openxlsx::read.xlsx(urlproj2021, sheet = "populationH", rows=c(2,102:108))
names(projMale)[1] <- "age0101"
projMale <- projMale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
projFemale <- openxlsx::read.xlsx(urlproj2021,sheet = "populationF", rows=c(2,102:108))
names(projFemale)[1] <- "age3112"
projFemale <- projFemale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
urlproj2021 <- "https://www.insee.fr/fr/statistiques/fichier/5894083/00_central.xlsx"
projMale <- openxlsx::read.xlsx(urlproj2021, sheet = "populationH", rows=c(2,102:108))
names(projMale)[1] <- "age0101"
projMale <- projMale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
projFemale <- openxlsx::read.xlsx(urlproj2021,sheet = "populationF", rows=c(2,102:108))
names(projFemale)[1] <- "age0101"
projFemale <- projFemale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
View(projMale)
View(projMale)
FRInseePopulationForecast2021_2 <- rbind(
mortalityFemale %>% mutate(sex = "female"),
mortalityMale %>% mutate(sex = "male")
) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101),"^[[:digit:]]+"),
sex = as.factor(sex))
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101),"^[[:digit:]]+"),
sex = as.factor(sex))
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex))
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
filter(year %in% unique(FRInseePopulationForecast2021$year)) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex))
View(FRInseePopulationForecast2021_2)
verif <- FRInseePopulationForecast2021 %>% filter(age>=99) %>% select(year,sex,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2)
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,age0101,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2)
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
filter(year %in% unique(FRInseePopulationForecast2021$year)) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex),
year=as.numeric(year))
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,age0101,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2)
View(verif)
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2)
View(verif)
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2, correc=popx0101/pop2)
View(verif)
FRInseePopulationForecast2021_2 <- FRInseePopulationForecast2021_2 %>%
left_join(verif %>% select(year,sex,age0101,correc), by=c("year","sex","age0101") )
View(FRInseePopulationForecast2021_2)
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
filter(year %in% unique(FRInseePopulationForecast2021$year)) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex),
year=as.numeric(year))
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2, correc=popx0101/pop2)
FRInseePopulationForecast2021_2 <- FRInseePopulationForecast2021_2 %>%
left_join(verif %>% select(year,sex,correc), by=c("year","sex") )
View(FRInseePopulationForecast2021_2)
View(FRInseePopulationForecast2021_2)
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
filter(year %in% unique(FRInseePopulationForecast2021$year)) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex),
year=as.numeric(year))
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2, correc=popx0101/pop2)
FRInseePopulationForecast2021_2 <- FRInseePopulationForecast2021_2 %>%
left_join(verif %>% select(year,sex,correc), by=c("year","sex") ) %>%
mutate(popx0101 = round(popx0101*correc)) %>%
select(-correc)
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021 %>%
filter(age0101<99,!(year==2022 & type=="forecasted")),
FRInseePopulationForecast2021_2
)
View(FRInseePopulationForecast2021)
FRInseePopulationForecast2021 <- bind_rows(
read_csv2("data-raw/donnees_pyramide_act_2022.csv") %>% mutate(geo="france",type="observed"),
read_csv2("data-raw/donnees_pyramide_proj_2022.csv") %>% mutate(geo="france",type="forecasted")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx0101 = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex) %>% recode("M" = "male", "F" = "female"),
geo = as.factor(geo) )
FRInseePopulationForecast2021 <- bind_rows(
read_csv2("data-raw/donnees_pyramide_act_2022.csv") %>% mutate(geo="france",type.obs="observed"),
read_csv2("data-raw/donnees_pyramide_proj_2022.csv") %>% mutate(geo="france",type.obs="forecasted")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx0101 = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex) %>% recode("M" = "male", "F" = "female"),
geo = as.factor(geo) )
urlproj2021 <- "https://www.insee.fr/fr/statistiques/fichier/5894083/00_central.xlsx"
projMale <- openxlsx::read.xlsx(urlproj2021, sheet = "populationH", rows=c(2,102:108))
names(projMale)[1] <- "age0101"
projMale <- projMale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
projFemale <- openxlsx::read.xlsx(urlproj2021,sheet = "populationF", rows=c(2,102:108))
names(projFemale)[1] <- "age0101"
projFemale <- projFemale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
filter(year %in% unique(FRInseePopulationForecast2021$year)) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex),
year=as.numeric(year))
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2, correc=popx0101/pop2)
FRInseePopulationForecast2021_2 <- FRInseePopulationForecast2021_2 %>%
left_join(verif %>% select(year,sex,correc), by=c("year","sex") ) %>%
mutate(popx0101 = round(popx0101*correc)) %>%
select(-correc)
View(FRInseePopulationForecast2021_2)
View(FRInseePopulationForecast2021_2)
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021 %>%
filter(age0101<99,!(year==2022 & type=="forecasted")),
FRInseePopulationForecast2021_2
)
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021 %>%
filter(age0101<99,!(year==2022 & type.obs=="forecasted")),
FRInseePopulationForecast2021_2
)
View(FRInseePopulationForecast2021)
FRInseePopulationForecast2021 <- bind_rows(
read_csv2("data-raw/donnees_pyramide_act_2022.csv") %>% mutate(geo="france",type.obs="observed"),
read_csv2("data-raw/donnees_pyramide_proj_2022.csv") %>% mutate(geo="france",type.obs="forecasted")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx0101 = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex) %>% recode("M" = "male", "F" = "female"),
geo = as.factor(geo) )
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021 %>%
filter(age0101<99,!(year==2022 & type.obs=="forecasted")),
FRInseePopulationForecast2021_2
) %>%
arrange(year,sex,age0101)
View(FRInseePopulationForecast2021)
FRInseePopulationForecast2021 <- bind_rows(
read_csv2("data-raw/donnees_pyramide_act_2022.csv") %>% mutate(geo="france",type.obs="observed"),
read_csv2("data-raw/donnees_pyramide_proj_2022.csv") %>% mutate(geo="france",type.obs="forecasted")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx0101 = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex) %>% recode("M" = "male", "F" = "female"),
geo = as.factor(geo) )
# data from 2021 population forecast (source 2)
# NB: data from the interactive pyramids aggregates all ages above 99
urlproj2021 <- "https://www.insee.fr/fr/statistiques/fichier/5894083/00_central.xlsx"
projMale <- openxlsx::read.xlsx(urlproj2021, sheet = "populationH", rows=c(2,102:108))
names(projMale)[1] <- "age0101"
projMale <- projMale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
projFemale <- openxlsx::read.xlsx(urlproj2021,sheet = "populationF", rows=c(2,102:108))
names(projFemale)[1] <- "age0101"
projFemale <- projFemale %>% pivot_longer(-c("age0101"), names_to = "year", values_to = "popx0101")
FRInseePopulationForecast2021_2 <- rbind(
projFemale %>% mutate(sex = "female"),
projMale %>% mutate(sex = "male")
) %>%
filter(year %in% unique(FRInseePopulationForecast2021$year), popx0101>0) %>%
mutate(type.obs = case_when(year<= 2021 ~ "observed",year >= 2022 ~ "forecasted") %>% as.factor(),
age0101 = as.numeric(str_extract(age0101,"^[[:digit:]]+")),
sex = as.factor(sex),
year=as.numeric(year),
geo="france")
verif <- FRInseePopulationForecast2021 %>% filter(age0101>=99) %>% select(year,sex,age0101,popx0101) %>%
left_join(FRInseePopulationForecast2021_2 %>%
select(year,sex,popx0101) %>%
rename(pop2=popx0101) %>%
group_by(year,sex) %>% summarise_all(sum) %>% ungroup(),
by = c("year","sex")) %>%
mutate(ecart=popx0101-pop2, correc=popx0101/pop2)
FRInseePopulationForecast2021_2 <- FRInseePopulationForecast2021_2 %>%
left_join(verif %>% select(year,sex,correc), by=c("year","sex") ) %>%
mutate(popx0101 = round(popx0101*correc)) %>%
select(-correc)
# final table
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021 %>%
filter(age0101<99,!(year==2022 & type.obs=="forecasted")),
FRInseePopulationForecast2021_2
) %>%
arrange(year,sex,age0101)
View(FRInseePopulationForecast2021)
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021,
FRInseePopulationForecast2021 %>%
select(-sex) %>%
group_by(year,geo,type,age0101) %>% summarise_all(sum) %>% ungroup() %>%
mutate(sex = "all")
)
FRInseePopulationForecast2021 <- bind_rows(
FRInseePopulationForecast2021,
FRInseePopulationForecast2021 %>%
select(-sex) %>%
group_by(year,geo,type.obs,age0101) %>% summarise_all(sum) %>% ungroup() %>%
mutate(sex = "all")
)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseeMortalityForecast2021,
FRInseeMortalityrates,
FRInseeMortalityrates_t69,
FRInseePopulation,
FRInseePopulationForecast2016,
FRInseePopulationForecast2021,
FRDreesVQSsurvey2014,
FRDreesAPA2017,
FRDreesAPA,
FRGaliEUSilc,
sullivan,
description_sullivan,
overwrite = T)
document()
#library(readxl)
#library(openxlsx)
library(tidyverse)
library(plotly)
library(hrbrthemes)
#library(kableExtra)
#library(flextable)
remotes::install_github("patrickaubert/healthexpectancies",ref='main')
library(healthexpectancies)
# remotes::install_github("patrickaubert/asdep",ref='main')
library(asdep)
# remotes::install_github("patrickaubert/retrstatfr",ref='main')
library(retrstatfr)
ordergen <- c("Avant la 1ère guerre mondiale","Première guerre","Première guerre et avant","Gén. 1918 et avant","Générations de la Première guerre et d'avant","Entre deux guerres","2ème guerre mondiale","Gén. 1919 à 1945","Entre deux guerres et 2ème guerre mondiale","Gén. de l'entre deux guerres et de la 2ème guerre mondiale","Gén. 1974 et suivantes","Générations post baby boom","Baby boomers")
generations <- function(a) {
case_when(
#a < 1914 ~ "Avant la 1ère guerre mondiale",
#a <= 1918 ~ "Première guerre",
#a <= 1918 ~ "Première guerre et avant",
a <= 1918 ~ "Gén. 1918 et avant",
#a < 1939 ~ "Entre deux guerres",
#a <= 1945 ~ "2ème guerre mondiale",
#a <= 1945 ~ "Entre deux guerres et 2ème guerre mondiale",
a <= 1945 ~ "Gén. 1919 à 1945",
a <= 1973 ~ "Baby boomers",
#a >= 1974 ~ "Générations post baby boom",
a >= 1974 ~ "Gén. 1974 et suivantes"
) %>%
factor(levels=ordergen)
}
popref <- healthexpectancies::FRInseePopulationForecast2021 %>%
mutate(year=year-1) %>%
rename(age=age0101,annee=year,pop=popx0101) %>%
filter(annee>=2004,age>=50,sex=="all") %>%
select(annee,age,pop)
decoupage <- function(pop=popref,preval,prevaldef=0) {
truc<-bind_rows(
pop %>% filter(annee %in% unique(preval$annee)) %>%
left_join(preval,
by = c(intersect(intersect(names(pop),names(preval)),c("annee","age")))),
pop %>% filter(annee > max(preval$annee)) %>%
left_join(preval %>%
filter(annee == max(annee) ) %>%
select(-annee),
by = "age")
) %>%
group_by(annee) %>%
mutate(preval = ifelse(is.na(preval),
ifelse(!is.null(prevaldef),prevaldef,max(preval,na.rm=TRUE)),
preval)) %>%
ungroup() %>%
mutate(gen = generations(annee-age),
nb = pop * preval) %>%
select(annee,gen,nb) %>%
group_by(annee,gen) %>% summarise_all(sum) %>% ungroup() %>%
group_by(annee) %>% mutate(part=round(100*nb/sum(nb),1)) %>% ungroup()
}
# == découpage par génération des effectifs de retraités, sous l'hypothèse de stabilisation des taux de retraités à partir de 2020
txretr <- retrstatfr::txretr %>% filter(sexe=="ensemble") %>% select(annee,age,txretr) %>% rename(preval=txretr)
decretraites <- decoupage(preval=txretr,prevaldef=1)
# == découpage par génération des effectifs de bénéficiaires de l'APA
# (les prévalences de l'APA par âge fin sont préalablement lissées)
prevalapa <- asdep::ASDEPprevalaidessoc %>%
filter(gir=="Ensemble",prestation %in% c("APA","APAetab"),recale_gir==FALSE,
((annee<=2015 & decomp6age==TRUE) | (annee>=2016 & decomp8age==TRUE)),
annee>=2004) %>%
select(prestation,annee,age,prevalence) %>%
rename(trage=age)
casapa <- prevalapa %>% select(annee,prestation) %>% distinct()
prevalisse <- function(i) {
poploc <- popref %>% filter(annee == casapa$annee[i],age>=60)
return(
poploc %>%
mutate(prestation = casapa$prestation[i]) %>%
group_by(annee) %>%
mutate(preval = prevalenceApprox(
prevalence=(prevalapa %>%
filter(annee==casapa$annee[i],
prestation==casapa$prestation[i]))$prevalence,
agecuts=seq(60,ifelse(casapa$annee[i]<=2015,85,95),5),
agemin=60,
agemax=max(poploc$age))) %>%
ungroup()
)
}
prevalapa <- do.call("bind_rows",
lapply(1:nrow(casapa), prevalisse ) ) %>%
select(prestation,annee,age,preval)
# APA, hyp de prévalences constantes après 2019
decapa_prevalcstes <- decoupage(pop=popref %>% filter(age>=60),
preval=prevalapa %>% filter(prestation=="APA"),prevaldef=NULL)
# APA en établissement, hyp de prévalences constantes après 2019
decapaetab_prevalcstes <- decoupage(pop=popref %>% filter(age>=60),
preval=prevalapa %>% filter(prestation=="APAetab"),prevaldef=NULL)
# APA, hypothèse que tous les gains d'EV sont sans APA
popapaproj <- healthexpectancies::FRInseeMortalityForecast2021 %>%
filter(year>=2019,sex=="all",age>=60,def.age=="current age (approx)") %>%
select(age,year,qx)
prevalapaproj <- prevalenceForecast(
tabref = popapaproj %>% filter(year==2019) %>%
left_join(prevalapa %>% filter(annee==2019,prestation=="APA") %>%
select(-prestation) %>%
rename(pix=preval,year=annee),
by =c("year","age")) %>%
group_by(year) %>% mutate(pix = ifelse(is.na(pix),max(pix,na.rm=TRUE),pix)) %>% ungroup(),
tabproj = popapaproj %>% filter(year>2019),
hypo="cstDLE") %>%
select(year,age,pix) %>%
rename(annee=year,preval=pix) %>%
mutate(preval = pmax(0,pmin(1,preval)) )
decapa_dlecste <- decoupage(pop=popref %>% filter(age>=60),
preval=prevalapaproj,prevaldef=NULL)
prevalapaetabproj <- prevalenceForecast(
tabref = popapaproj %>% filter(year==2019) %>%
left_join(prevalapa %>% filter(annee==2019,prestation=="APAetab") %>%
select(-prestation) %>%
rename(pix=preval,year=annee),
by =c("year","age")) %>%
group_by(year) %>% mutate(pix = ifelse(is.na(pix),max(pix,na.rm=TRUE),pix)) %>% ungroup(),
tabproj = popapaproj %>% filter(year>2019),
hypo="cstDLE") %>%
select(year,age,pix) %>%
rename(annee=year,preval=pix) %>%
mutate(preval = pmax(0,pmin(1,preval)) )
decapaetab_dlecste <- decoupage(pop=popref %>% filter(age>=60),
preval=prevalapaetabproj,prevaldef=NULL)
# == une table de synthèse avec la part des gén du babyboom
partbabyboom <- bind_rows(
decretraites %>% mutate(indic="retr"),
decapa_prevalcstes %>% mutate(indic="apaprevalcst"),
decapaetab_prevalcstes %>% mutate(indic="apaetabprevalcst"),
decapa_dlecste %>% mutate(indic="apadlecst"),
decapaetab_dlecste %>% mutate(indic="apaetabdlecst")
) %>%
filter(gen=="Baby boomers") %>%
select(annee,indic,part,nb)
# min((partbabyboom %>% filter(indic=="retr",part>=50))$annee)
# (partbabyboom %>% filter(indic=="retr") %>% filter(part==max(part)))$annee
# (partbabyboom %>% filter(indic=="retr",annee==2022) )$part
# max((partbabyboom %>% filter(indic=="apaprevalcst",part>=50))$annee)
# max((partbabyboom %>% filter(indic=="apadlecst",part>=50))$annee)
# (partbabyboom %>% filter(indic=="apadlecst") %>% filter(part==max(part)))$annee
# (partbabyboom %>% filter(indic=="apadlecst") %>% filter(nb==max(nb)))$annee
# (partbabyboom %>% filter(indic=="apaprevalcst") %>% filter(nb==max(nb)))$nb
View(popref)
truc <- popref %>% filter(age==60)
View(truc)
popapaproj <- healthexpectancies::FRInseeMortalityForecast2021 %>%
filter(year>=2019,sex=="all",age>=60,def.age=="current age (approx)") %>%
select(age,year,qx)
prevalapaproj <- prevalenceForecast(
tabref = popapaproj %>% filter(year==2019) %>%
left_join(prevalapa %>% filter(annee==2019,prestation=="APA") %>%
select(-prestation) %>%
rename(pix=preval,year=annee),
by =c("year","age")) %>%
group_by(year) %>% mutate(pix = ifelse(is.na(pix),max(pix,na.rm=TRUE),pix)) %>% ungroup(),
tabproj = popapaproj %>% filter(year>2019),
hypo="cstDLE")
verifapaproj <- prevalapaproj %>% filter(age==60) %>% select(year,ex,DLEx,pctDLEx)
popapaproj <- healthexpectancies::FRInseeMortalityForecast2021 %>%
filter(year>=2019,sex=="all",age>=60,def.age=="current age (approx)") %>%
select(age,year,qx)
prevalapaproj <- prevalenceForecast(
tabref = popapaproj %>% filter(year==2019) %>%
left_join(prevalapa %>% filter(annee==2019,prestation=="APA") %>%
select(-prestation) %>%
rename(pix=preval,year=annee),
by =c("year","age")) %>%
group_by(year) %>% mutate(pix = ifelse(is.na(pix),max(pix,na.rm=TRUE),pix)) %>% ungroup(),
tabproj = popapaproj %>% filter(year>2019),
hypo="cstDLE")
names(prevalapaproj)
verifapaproj <- prevalapaproj %>% filter(age==60)
View(verifapaproj)
View(decapa_prevalcstes)
verif <- decapa_prevalcstes %>% select(-gen) %>% group_by(annee) %>% summarise_all(sum) %>% ungroup()
View(verif)
verif <- decapa_dlecste %>% select(-gen) %>% group_by(annee) %>% summarise_all(sum) %>% ungroup()
View(verifapaproj)
View(verif)
View(verifapaproj)
verif <- decapa_prevalcstes %>% select(-gen) %>% group_by(annee) %>% summarise_all(sum) %>% ungroup()
View(verif)
View(prevalapa)
