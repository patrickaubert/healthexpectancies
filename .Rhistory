qxf = ifelse(is.na(qxf),qx,qxf),
pxf = ifelse(is.na(pxf),px,pxf)) %>%
mutate(qx = (1-px)*qx + pxf*qxf) %>%
select(year,age,sex,qx)
qmort_t69 <- bind_rows(
qmort_t69 %>% mutate(def.age = "age at end of year"),
qmort_t69_bis %>% mutate(def.age = "current age (approx)")
) %>%
mutate(def.age = as.factor(def.age))
# ajout des quotients de mortalité pour l'ensemble des sexes
# (RQ méthode utilisée jusqu'au 31/07/2022 : en faisant l'hypothèse d'un partage 50/50 d'hommes et de femmes à la naissance)
partnaiss <- FRInseePopulation %>% filter(age0101==0,geo=="france") %>% select(year,sex,popx) %>%
mutate(sex = recode(as.character(sex), "M"="male","F"="female"),
year=year-1) %>%
rename(partnaiss=popx) %>%
group_by(year) %>% mutate(partnaiss=partnaiss/sum(partnaiss)) %>% ungroup()
# transitoire : on réplique en 2022 la part de naissance de 2021
partnaiss <- bind_rows(partnaiss, partnaiss %>% filter(year==2021) %>% mutate(year=2022))
qmort_t69_all <- qmort_t69 %>%
mutate(qx=1-qx) %>%
arrange(year,sex,def.age,age) %>% group_by(year,sex,def.age) %>% mutate(qx=cumprod(qx)) %>% ungroup() %>%
left_join(partnaiss, by=c("year","sex") ) %>%
mutate(qx = qx * partnaiss) %>%
select(-sex,-partnaiss) %>% group_by(year,def.age,age) %>% summarise_all(sum) %>% ungroup()
qmort_t69_all <- qmort_t69_all %>%
left_join(qmort_t69_all %>% mutate(age=age+1) %>% rename(lqx=qx), by=c("year","age","def.age")) %>%
mutate(qx = ifelse(age==0,1-qx,1-qx/lqx),
sex = "all") %>%
select(-lqx)
qmort_t69 <- bind_rows( qmort_t69 , qmort_t69_all)
View(qmort_t69)
FRInseeMortalityrates_t69 <- qmort_t69
View(qmort_t69)
verif <- CompleteDFLEtable(qmort_t69) %>% select(sex,year,age,ex)
View(verif)
verif <- CompleteDFLEtable(qmort_t69) %>% select(sex,year,age,ex) %>% filter(age %in% c(0,60,65))
View(verif)
View(verif)
verif <- CompleteDFLEtable(qmort_t69)
View(verif)
View(qmort_t69)
verif <- CompleteDFLEtable(qmort_t69 %>% filter(def.age=="current age (approx)")) %>% select(sex,year,age,ex) %>% filter(age %in% c(0,60,65))
View(verif)
document()
class(c(1,2,4,5))
is.vector(c(1,2,4))
class(data.frame(c(1,2,3),c(2,3,4)))
is.data.frame(data.frame(c(1,2,3),c(2,3,4)))
is.vector(data.frame(c(1,2,3),c(2,3,4)))
is.tibble(data.frame(c(1,2,3),c(2,3,4)))
is.data.frame(tibble(c(1,2,3),c(2,3,4)))
library(tidyverse)
is.data.frame(tibble(c(1,2,3),c(2,3,4)))
truc <- data.frame(c(1,2,3),c(2,3,4))
names(truc)
truc <- data.frame(a=c(1,2,3),b=c(2,3,4))
truc$a
class(truc$a)
is.vector(truc$a)
load_all()
library(devtools)
load_all()
truc <y
truc <- prevalenceApprox(prevalence = (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,95,5)), agemin=60, agemax=100, weight=(FRInseePopulation %>% filter(sex=="female",year==2018,age0101>=60) %>% arrange(age0101))$popx)
prevalence = (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))$prevalence
NROW(prevalence)
weight=(FRInseePopulation %>% filter(sex=="female",year==2018,age0101>=60) %>% arrange(age0101))$popx
NROW(weight)
weight=(FRInseePopulation %>% filter(sex=="female",year==2018,age0101>=60) %>% arrange(age0101))
weight=(FRInseePopulation %>% filter(sex=="female",year==2018)
)
weight<-FRInseePopulation
View(weight)
truc <- prevalenceApprox(prevalence = (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,95,5)), agemin=60, agemax=100, weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60) %>% arrange(age0101))$popx)
weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60) %>% arrange(age0101))$popx
weight<-FRInseePopulation
View(weight)
unique(weight$geo)
truc <- prevalenceApprox(prevalence = (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,95,5)), agemin=60, agemax=100, weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60,geo=="france") %>% arrange(age0101))$popx)
weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60,geo=="france") %>% arrange(age0101))$popx
weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60,geo=="france") %>% arrange(age0101))
View(weight)
truc <- prevalenceApprox(prevalence = (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60,geo=="france") %>% arrange(age0101))$popx)
truc
truc <- prevalenceApprox(prevalence = (FRDreesAPA %>% filter(year==2018,sex=="male",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,90,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(sex=="M",year==2019,age0101>=60) %>% arrange(age0101))$popx)
weight=(FRInseePopulation %>% filter(sex=="M",year==2019,age0101>=60) %>% arrange(age0101))$popx
prevalenceApprox(prevalence = (FRDreesAPA %>% filter(year==2018,sex=="male",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,90,5)), agemin=60, agemax=100, weight=(FRInseePopulation %>% filter(sex=="male",year==2019,age0101>=60,geo=="france") %>% arrange(age0101))$popx)
truc <- prevalenceApprox(prevalence = (FRDreesAPA %>% filter(year==2018,sex=="male",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,90,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(sex=="male",year==2019,age0101>=60,geo=="france") %>% arrange(age0101))$popx)
weight=(FRInseePopulation %>% filter(sex=="male",year==2019,age0101>=60,geo=="france") %>% arrange(age0101))$popx
weight=(FRInseePopulation %>% filter(sex=="M",year==2019,age0101>=60,geo=="france") %>% arrange(age0101))$popx
truc <- prevalenceApprox(prevalence = (FRDreesAPA %>% filter(year==2018,sex=="male",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,90,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(sex=="M",year==2019,age0101>=60,geo=="france") %>% arrange(age0101))$popx)
prevalence <- (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))
View(prevalence)
unique(FRDreesAPA2017$typepresta)
unique(FRDreesAPA2017$year)
names(FRDreesAPA2017)
View(FRDreesAPA2017)
NROW(intersect(c(1,2),c(3)))
load_all()
truc <- prevalenceApprox(prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101))
)
truc <- prevalenceApprox(prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101)), categories = c("typepresta")
)
load_all()
truc <- prevalenceApprox(prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101)), categories = c("typepresta")
)
prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5))
prevalence = FRDreesAPA2017
weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101))
is.vector(prevalence)
is.vector(weight)
(is.vector(prevalence) != is.vector(weight))
TRUE && FALSE
TRUE && TRUE
FALSE && TRUE
FALSE && FALSE
(is.vector(prevalence) == is.vector(weight))
(!(is.vector(prevalence) == is.vector(weight)))
load_all()
truc <- prevalenceApprox(prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101)), categories = c("typepresta"))
prevalence = FRDreesAPA2017
(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101))
is.vector(prevalence)
is.vector(weight)
(!(is.vector(prevalence) == is.vector(weight)))
type(weight)
class(weight)
class(prevalence)
is.data.frame(prevalence)
is.data.frame(weight)
load_all()
true <- prevalenceApprox(prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% arrange(sex,age0101)), categories = c("typepresta"))
View(weight)
truc <- prevalenceApprox(prevalence = FRDreesAPA2017, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% rename(weight=popx) %>% arrange(sex,age0101)), categories = c("typepresta"))
View(truc)
truc %>% ggplot(aes(y=prevalence,x=age,colour=sex,group=sex)) + geom_line() + facet_grid(~typepresta)
truc2 <- prevalenceApprox(prevalence = (FRDreesAPA2017 %>% filter(sex=="female",typepresta=="APA à domicile"))$prevalence, agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(sex=="F",year==2018,age0101>=60,geo=="france") %>% arrange(age0101))$popx)
truc2
truc <- prevalenceApprox(prevalence = FRDreesAPA2017 %>% mutate(year=2018), agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% rename(weight=popx) %>% arrange(sex,age0101)), categories = c("typepresta"))
View(truc)
truc <- prevalenceApprox(prevalence = FRDreesAPA2017 %>% mutate(year=2017), agecuts=c(seq(60,95,5)), agemin=60, agemax=99, weight=(FRInseePopulation %>% filter(year==2018,age0101>=60,geo=="france") %>% mutate(sex=recode(sex,"F"="female","M"="male")) %>% rename(weight=popx) %>% arrange(sex,age0101)), categories = c("typepresta"))
load_all()
load_all()
document()
library(devtools)
load_all()
document()
library(devtools)
library(readxl)
library(httr)
library(openxlsx)
library(tidyverse)
library(janitor)
load_all()
prev_vqs_2021 <- read.xlsx(xlsxFile="https://data.drees.solidarites-sante.gouv.fr/api/datasets/1.0/enquete-vie-quotidienne-et-sante-2021-donnees-detaillees/attachments/enquete_vie_quotidienne_et_sante_2021_donnees_nationales_xlsx/",
sheet="Données nationales_parts",
rows=c(4:129))
eff_vqs_2021 <- read.xlsx(xlsxFile="https://data.drees.solidarites-sante.gouv.fr/api/datasets/1.0/enquete-vie-quotidienne-et-sante-2021-donnees-detaillees/attachments/enquete_vie_quotidienne_et_sante_2021_donnees_nationales_xlsx/",
sheet="Données nationales_effectifs",
rows=c(4:129))
View(eff_vqs_2021)
# names of columns
nb_age <- (ncol(prev_vqs_2021)-3)/3
names(prev_vqs_2021)[4:ncol(prev_vqs_2021)] <- paste0(
c(rep("male",nb_age),rep("female",nb_age),rep("all",nb_age)),
"_",names(prev_vqs_2021)[4:ncol(prev_vqs_2021)])
names(eff_vqs_2021)[4:ncol(eff_vqs_2021)]  <- names(prev_vqs_2021)[4:ncol(prev_vqs_2021)]
FRDreesVQSsurvey2021 <- prev_vqs_2021 %>%
fill(all_of(c("X1","X2","X3")), .direction="down") %>%
pivot_longer(cols = -c("X1","X2","X3"),names_to="sex_age",values_to="prevalence")  %>%
filter(!is.na(prevalence)) %>%
full_join(
eff_vqs_2021 %>%
fill(all_of(c("X1","X2","X3")), .direction="down") %>%
pivot_longer(cols = -c("X1","X2","X3"),names_to="sex_age",values_to="nb")  %>%
filter(!is.na(nb)),
by=c("X1","X2","X3","sex_age")
) %>%
select(-X1) %>%
mutate(prevalence= prevalence/100,
sex = sex_age %>% str_extract("^[^_]+(?=_)"),
age = sex_age %>% str_replace("^[^_]+_","") %>%
recode("74-79.ans"="75-79.ans")) %>%
select(-sex_age) %>%
#filter(!(X3 %in% c("Non","Aucune","Très bon","Bon","Assez bon"))) %>%
mutate(X3 = X3 %>% str_replace("^N.+ pas du tout","Ne peut pas du tout")) %>%
mutate(agebracket = case_when(
age == "Total" ~ "[5,Inf)",
age == "85.ans.et.plus" ~ "[85,Inf)",
TRUE ~ paste0("[",str_extract(age,"^[[:digit:]]+(?=\\-)"),",",(as.numeric(str_extract(age,"(?<=\\-)[[:digit:]]+(?=\\.)"))+1),")") ),
agebracket = factor(agebracket)) %>%
select(-age) %>%
rename(limitationtype=X2,
limitationintensity=X3)
View(FRDreesVQSsurvey2021)
prev_vqs_2021 <- read.xlsx(xlsxFile="https://data.drees.solidarites-sante.gouv.fr/api/datasets/1.0/enquete-vie-quotidienne-et-sante-2021-donnees-detaillees/attachments/enquete_vie_quotidienne_et_sante_2021_donnees_nationales_xlsx/",
sheet="Données nationales_parts",
rows=c(4:129))
eff_vqs_2021 <- read.xlsx(xlsxFile="https://data.drees.solidarites-sante.gouv.fr/api/datasets/1.0/enquete-vie-quotidienne-et-sante-2021-donnees-detaillees/attachments/enquete_vie_quotidienne_et_sante_2021_donnees_nationales_xlsx/",
sheet="Données nationales_effectifs",
rows=c(4:129))
# names of columns
nb_age <- (ncol(prev_vqs_2021)-3)/3
names(prev_vqs_2021)[4:ncol(prev_vqs_2021)] <- paste0(
c(rep("male",nb_age),rep("female",nb_age),rep("all",nb_age)),
"_",names(prev_vqs_2021)[4:ncol(prev_vqs_2021)])
names(eff_vqs_2021)[4:ncol(eff_vqs_2021)]  <- names(prev_vqs_2021)[4:ncol(prev_vqs_2021)]
FRDreesVQSsurvey2021 <- prev_vqs_2021 %>%
fill(all_of(c("X1","X2","X3")), .direction="down") %>%
pivot_longer(cols = -c("X1","X2","X3"),names_to="sex_age",values_to="prevalence")  %>%
filter(!is.na(prevalence)) %>%
full_join(
eff_vqs_2021 %>%
fill(all_of(c("X1","X2","X3")), .direction="down") %>%
pivot_longer(cols = -c("X1","X2","X3"),names_to="sex_age",values_to="nb")  %>%
filter(!is.na(nb)),
by=c("X1","X2","X3","sex_age")
) %>%
select(-X1) %>%
mutate(prevalence= prevalence/100,
sex = sex_age %>% str_extract("^[^_]+(?=_)"),
age = sex_age %>% str_replace("^[^_]+_","") %>%
recode("74-79.ans"="75-79.ans")) %>%
select(-sex_age) %>%
#filter(!(X3 %in% c("Non","Aucune","Très bon","Bon","Assez bon"))) %>%
mutate(X3 = X3 %>% str_replace("^N.+ pas du tout","Ne peut pas du tout")) %>%
mutate(agebracket = case_when(
age == "Total" ~ "[5,Inf)",
age == "85.ans.et.plus" ~ "[85,Inf)",
TRUE ~ paste0("[",str_extract(age,"^[[:digit:]]+(?=\\-)"),",",(as.numeric(str_extract(age,"(?<=\\-)[[:digit:]]+(?=\\.)"))+1),")") ),
agebracket = factor(agebracket)) %>%
select(-age) %>%
rename(limitationtype=X2,
limitationintensity=X3)
usethis::use_data(FRDreesVQSsurvey2021, overwrite = T)
document()
library(devtools)
library(readxl)
library(httr)
library(openxlsx)
library(tidyverse)
library(janitor)
load_all()
?read.xlsx
txincap <- read.xlsx(
xlsxFile = "https://fr.ftp.opendatasoft.com/sgsocialgouv/er/ER1258.xlsx",
sheet = "DC-22",
rows=c(4:548), cols = c(2:7))
View(txincap)
library(httr)
httr::GET("https://drees.solidarites-sante.gouv.fr/sites/default/files/2021-10/ER1213.xls",
write_disk(fileloc <- tempfile(fileext = ".xls")))
txincap <- bind_rows(
read_excel(path = fileloc, sheet="DC-8", range = "B4:O20") %>%
mutate(sex="male",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-9", range = "B4:O20") %>%
mutate(sex="male",incap="gali_severe"),
read_excel(path = fileloc, sheet="DC-10", range = "B4:O20") %>%
mutate(sex="female",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-11", range = "B4:O20") %>%
mutate(sex="female",incap="gali_severe")
)
unlink(fileloc)
View(txincap)
txincap <- txincap %>%
rename(age=Âge) %>%
pivot_longer(cols=-c("age","sex","incap"),names_to="year",values_to="txincap") %>%
arrange(sex,incap,year,age) %>%
mutate(year=as.numeric(year),
agelow = str_extract(age,"^[[:digit:]]{1,2}(?<=[![:digit:]])"),
agehigh = str_extract(age,"(?<=[[:digit:]]{1,2}\\-)[[:digit:]]{2}"),
age =ifelse(!is.na(agehigh),
paste0("[",agelow,",",(as.numeric(agehigh)+1),")"),
paste0("[",agelow,",Inf]"))) %>%
select(-agelow,-agehigh)
View(txincap)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(year,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-popx,-nbincap)
View(txincap_all)
txincap <- read.xlsx(
xlsxFile = "https://fr.ftp.opendatasoft.com/sgsocialgouv/er/ER1258.xlsx",
sheet = "DC-22",
rows=c(4:548), cols = c(2:7))
View(txincap)
View(txincap)
txincap <- txincap %>%
rename(age=Âge, year=Année, sex=Sexe) %>%
pivot_longer(cols=-c("age","sex","year"),names_to="incap",values_to="txincap")
unique(taxincap$incap) %>% paste(collapse="=,")
unique(txincap$incap) %>% paste(collapse="=,")
View(txincap)
View(txincap_all)
txincap <- read.xlsx(
xlsxFile = "https://fr.ftp.opendatasoft.com/sgsocialgouv/er/ER1258.xlsx",
sheet = "DC-22",
rows=c(4:548), cols = c(2:7))
txincap <- txincap %>%
rename(age=Âge, year=Année, sex=Sexe) %>%
pivot_longer(cols=-c("age","sex","year"),names_to="incap",values_to="txincap") %>%
mutate(
sex = recode(sexe, "homme" = "male", "femme"="female"),
incap = recode(incap,
"Incapacités.fortes.et.modérées"="gali_incl_moderate",
"Incapacités.fortes"="gali_severe",
"Incapacités.modérées"="gali_moderate_only"),
age = case_when(
age == 0 ~ "[0,15)",
age == 85 ~ "[85,Inf]",
TRUE ~  paste0("[",age,",",age+5,")")
)
)
txincap <- txincap %>%
rename(age=Âge, year=Année, sex=Sexe) %>%
pivot_longer(cols=-c("age","sex","year"),names_to="incap",values_to="txincap") %>%
mutate(
sex = recode(sex, "homme" = "male", "femme"="female"),
incap = recode(incap,
"Incapacités.fortes.et.modérées"="gali_incl_moderate",
"Incapacités.fortes"="gali_severe",
"Incapacités.modérées"="gali_moderate_only"),
age = case_when(
age == 0 ~ "[0,15)",
age == 85 ~ "[85,Inf]",
TRUE ~  paste0("[",age,",",age+5,")")
)
)
View(txincap)
View(txincap_all)
View(txincap)
View(txincap_all)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(year,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-popx,-nbincap)
View(txincap_all)
max(FRInseePopulation$year)
View(txincap)
View(txincap_all)
max(poploc$year)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
max(poploc$year)
max(FRInseePopulation$year)
poploc <- FRInseePopulation %>%
rename(age = age0101)
max(poploc$year)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female"))
max(poploc$year)
library(descr)
crosstab(FRInseePopulation$year,FRInseePopulation$year)
crosstab(FRInseePopulation$year,FRInseePopulation$year)
crosstab(FRInseePopulation$year,FRInseePopulation$geo)
FRInseePopulation <- bind_rows(
#read_csv2("data-raw/donnees_pyramide_act.csv") %>% mutate(geo="france"),
read_csv2("https://www.insee.fr/fr/outil-interactif/5014911/data/FR/donnees_pyramide_act.csv") %>% mutate(geo="france"),
read_csv2("data-raw/donnees_pyramide_act_fm.csv") %>% mutate(geo="metropolitan france")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex),
geo = as.factor(geo))
View(FRInseePopulation)
View(FRInseePopulation)
unique(FRInseePopulation$sex)
View(FRInseePopulation)
View(FRInseePopulation)
pyra_metro <- function(year) {
pyra <- read.xlsx(
xlsxFile = paste0("https://www.insee.fr/fr/statistiques/fichier/6688661/Pyra",as.character(year),".xlsx"),
sheet = paste0(as.character(year)," - Métro"),
rows = c(6:111), cols = c(2:4)   )
names(pyra) <- c("age0101","M","F")
pyra <- pyra %>%
pivot_longer(cols=c("M","F"), names_to="sex",values_to="popx") %>%
mutate(year = as.numeric(year),
geo = "metropolitan france",
sex = as.factor(sex))
return(pyra)
}
verif <- pyra(2023)
verif <- pyra_metro(2023)
View(verif)
verif <- pyra_metro(2020)
FRInseePopulation <- bind_rows(
#read_csv2("data-raw/donnees_pyramide_act.csv") %>% mutate(geo="france"),
read_csv2("https://www.insee.fr/fr/outil-interactif/5014911/data/FR/donnees_pyramide_act.csv") %>% mutate(geo="france"),
read_csv2("data-raw/donnees_pyramide_act_fm.csv") %>% mutate(geo="metropolitan france")  )  %>%
rename(year = ANNEE,
sex = SEXE,
popx = POP,
age0101 = AGE) %>%
mutate(year = as.numeric(year),
age0101 = as.numeric(age0101),
sex = as.factor(sex),
geo = as.factor(geo))
# updated information on metropolitan France
pyra_metro <- function(year) {
pyra <- read.xlsx(
xlsxFile = paste0("https://www.insee.fr/fr/statistiques/fichier/6688661/Pyra",as.character(year),".xlsx"),
sheet = paste0(as.character(year)," - Métro"),
rows = c(6:111), cols = c(2:4)   )
names(pyra) <- c("age0101","M","F")
pyra <- pyra %>%
pivot_longer(cols=c("M","F"), names_to="sex",values_to="popx") %>%
mutate(year = as.numeric(year),
geo = "metropolitan france",
sex = as.factor(sex))
return(pyra)
}
FRInseePopulation <- bind_rows(
FRInseePopulation %>% filter(geo=="france"),
FRInseePopulation %>% filter(geo=="metropolitan france" & year<2020),
lapply( c(2020:2023), pyra_metro) ) %>%
arrange(year,geo,sex,age)
FRInseePopulation <- bind_rows(
FRInseePopulation %>% filter(geo=="france"),
FRInseePopulation %>% filter(geo=="metropolitan france" & year<2020),
lapply( c(2020:2023), pyra_metro) ) %>%
arrange(year,geo,sex,age0101)
crosstab(FRInseePopulation$year,FRInseePopulation$geo)
txincap <- read.xlsx(
xlsxFile = "https://fr.ftp.opendatasoft.com/sgsocialgouv/er/ER1258.xlsx",
sheet = "DC-22",
rows=c(4:548), cols = c(2:7))
txincap <- txincap %>%
rename(age=Âge, year=Année, sex=Sexe) %>%
pivot_longer(cols=-c("age","sex","year"),names_to="incap",values_to="txincap") %>%
mutate(
sex = recode(sex, "homme" = "male", "femme"="female"),
incap = recode(incap,
"Incapacités.fortes.et.modérées"="gali_incl_moderate",
"Incapacités.fortes"="gali_severe",
"Incapacités.modérées"="gali_moderate_only"),
age = case_when(
age == 0 ~ "[0,15)",
age == 85 ~ "[85,Inf]",
TRUE ~  paste0("[",age,",",age+5,")")
)
)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(year,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-popx,-nbincap)
View(txincap_all)
FRGaliEUSilc <- bind_rows(txincap, txincap_all) %>%
arrange(sex,year,incap) %>%
rename(agebracket = age, prevalence=txincap) %>%
mutate(prevalence=prevalence/100)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseeMortalityForecast2021,
FRInseeMortalityrates,
FRInseeMortalityrates_t69,
FRInseePopulation,
FRInseePopulationForecast2016,
FRInseePopulationForecast2021,
FRDreesVQSsurvey2014,
FRDreesVQSsurvey2021,
FRDreesAPA2017,
FRDreesAPA,
FRDreesEHPA,
FRGaliEUSilc,
sullivan,
description_sullivan,
overwrite = T)
document()
