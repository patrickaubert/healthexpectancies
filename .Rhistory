mutate(sex="male",incap="severe"),
read_excel(path = fileloc, sheet="DC-10", range = "B4:O20") %>%
mutate(sex="female",incap="all"),
read_excel(path = fileloc, sheet="DC-11", range = "B4:O20") %>%
mutate(sex="female",incap="severe")
)
unlink(fileloc)'
''
View(txincap)
txincap <- txincap %>%
rename(age=Âge) %>%
pivot_longer(cols=-c("age","sex","incap"),names_to="annee",values_to="txincap") %>%
arrange(sex,incap,annee,age) %>%
mutate(annee=as.numeric(annee),
agelow = str_extract(age,"^[[:digit:]]{1,2}(?<=[![:digit:]])"),
agehigh = str_extract(age,"(?<=[[:digit:]]{1,2}\\-)[[:digit:]]{2}"),
age =ifelse(!is.na(agehigh),
paste0("[",agelow,",",(as.numeric(agehigh)+1),")"),
paste0("[",agelow,",Inf]"))) %>%
select(-agelow,-agehigh)
View(txincap)
httr::GET("https://drees.solidarites-sante.gouv.fr/sites/default/files/2021-10/ER1213.xls",
write_disk(fileloc <- tempfile(fileext = ".xls")))
txincap <- bind_rows(
read_excel(path = fileloc, sheet="DC-8", range = "B4:O20") %>%
mutate(sex="male",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-9", range = "B4:O20") %>%
mutate(sex="male",incap="gali_severe"),
read_excel(path = fileloc, sheet="DC-10", range = "B4:O20") %>%
mutate(sex="female",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-11", range = "B4:O20") %>%
mutate(sex="female",incap="gali_severe")
)
unlink(fileloc)
txincap <- txincap %>%
rename(age=Âge) %>%
pivot_longer(cols=-c("age","sex","incap"),names_to="annee",values_to="txincap") %>%
arrange(sex,incap,annee,age) %>%
mutate(annee=as.numeric(annee),
agelow = str_extract(age,"^[[:digit:]]{1,2}(?<=[![:digit:]])"),
agehigh = str_extract(age,"(?<=[[:digit:]]{1,2}\\-)[[:digit:]]{2}"),
age =ifelse(!is.na(agehigh),
paste0("[",agelow,",",(as.numeric(agehigh)+1),")"),
paste0("[",agelow,",Inf]"))) %>%
select(-agelow,-agehigh)
poploc <- FRInseePopulation %>%
rename(age = age0101, sex = sexe) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008)
View(poploc)
View(txincap)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
View(poploc)
View(txincap)
View(txincap)
View(txincap)
httr::GET("https://drees.solidarites-sante.gouv.fr/sites/default/files/2021-10/ER1213.xls",
write_disk(fileloc <- tempfile(fileext = ".xls")))
txincap <- bind_rows(
read_excel(path = fileloc, sheet="DC-8", range = "B4:O20") %>%
mutate(sex="male",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-9", range = "B4:O20") %>%
mutate(sex="male",incap="gali_severe"),
read_excel(path = fileloc, sheet="DC-10", range = "B4:O20") %>%
mutate(sex="female",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-11", range = "B4:O20") %>%
mutate(sex="female",incap="gali_severe")
)
unlink(fileloc)
txincap <- txincap %>%
rename(age=Âge) %>%
pivot_longer(cols=-c("age","sex","incap"),names_to="year",values_to="txincap") %>%
arrange(sex,incap,year,age) %>%
mutate(year=as.numeric(year),
agelow = str_extract(age,"^[[:digit:]]{1,2}(?<=[![:digit:]])"),
agehigh = str_extract(age,"(?<=[[:digit:]]{1,2}\\-)[[:digit:]]{2}"),
age =ifelse(!is.na(agehigh),
paste0("[",agelow,",",(as.numeric(agehigh)+1),")"),
paste0("[",agelow,",Inf]"))) %>%
select(-agelow,-agehigh)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
View(poploc)
txincap_all <- pop2 %>%
mutate(age = cut(agefin, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(annee,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-pop,-nbincap)
txincap_all <- poploc %>%
mutate(age = cut(agefin, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(annee,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-pop,-nbincap)
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(annee,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-pop,-nbincap)
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(year,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-pop,-nbincap)
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(year,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-popx,-nbincap)
View(txincap_all)
View(txincap)
txincap <- bind_rows(txincap, txincap_all) %>%
arrange(sex,year,incap) %>%
mutate(txincap=txincap/100)
library(httr)
httr::GET("https://drees.solidarites-sante.gouv.fr/sites/default/files/2021-10/ER1213.xls",
write_disk(fileloc <- tempfile(fileext = ".xls")))
txincap <- bind_rows(
read_excel(path = fileloc, sheet="DC-8", range = "B4:O20") %>%
mutate(sex="male",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-9", range = "B4:O20") %>%
mutate(sex="male",incap="gali_severe"),
read_excel(path = fileloc, sheet="DC-10", range = "B4:O20") %>%
mutate(sex="female",incap="gali_incl_moderate"),
read_excel(path = fileloc, sheet="DC-11", range = "B4:O20") %>%
mutate(sex="female",incap="gali_severe")
)
unlink(fileloc)
txincap <- txincap %>%
rename(age=Âge) %>%
pivot_longer(cols=-c("age","sex","incap"),names_to="year",values_to="txincap") %>%
arrange(sex,incap,year,age) %>%
mutate(year=as.numeric(year),
agelow = str_extract(age,"^[[:digit:]]{1,2}(?<=[![:digit:]])"),
agehigh = str_extract(age,"(?<=[[:digit:]]{1,2}\\-)[[:digit:]]{2}"),
age =ifelse(!is.na(agehigh),
paste0("[",agelow,",",(as.numeric(agehigh)+1),")"),
paste0("[",agelow,",Inf]"))) %>%
select(-agelow,-agehigh)
poploc <- FRInseePopulation %>%
rename(age = age0101) %>%
mutate(year = year-1,
sex = recode(sex, "M" = "male", "F" = "female")) %>%
filter(year>=2008,geo=="metropolitan france")
txincap_all <- poploc %>%
mutate(age = cut(age, c(0,seq(15,85,5),Inf), include.lowest = TRUE, right=FALSE)) %>%
filter(year %in% unique(txincap$year)) %>%
select(age,sex,year,popx) %>%
left_join(txincap, by=c("year","age","sex")) %>%
mutate(nbincap=popx*txincap/100) %>%
select(-sex,-txincap) %>%
group_by(year,age,incap) %>% summarise_all(sum) %>% ungroup() %>%
mutate(txincap=100*nbincap/popx,
sex="all") %>%
select(-popx,-nbincap)
FRGaliEUSilc <- bind_rows(txincap, txincap_all) %>%
arrange(sex,year,incap) %>%
mutate(txincap=txincap/100)
View(FRGaliEUSilc)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseePopulationForecast2016,
FRInseeMortalityrates,
FRInseePopulation,
FRDreesVQSsurvey2014,
FRDreesAPA2017,
FRDreesAPA,
FRGaliEUSilc,
sullivan,
description_sullivan,
overwrite = T)
FRGaliEUSilc <- bind_rows(txincap, txincap_all) %>%
arrange(sex,year,incap) %>%
rename(agebracket = age) %>%
mutate(txincap=txincap/100)
View(FRGaliEUSilc)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseePopulationForecast2016,
FRInseeMortalityrates,
FRInseePopulation,
FRDreesVQSsurvey2014,
FRDreesAPA2017,
FRDreesAPA,
FRGaliEUSilc,
sullivan,
description_sullivan,
overwrite = T)
FRGaliEUSilc <- bind_rows(txincap, txincap_all) %>%
arrange(sex,year,incap) %>%
rename(agebracket = age, prevalence=txincap) %>%
mutate(prevalence=prevalence/100)
View(FRGaliEUSilc)
usethis::use_data(FRInseeMortalityForecast2016,
FRInseePopulationForecast2016,
FRInseeMortalityrates,
FRInseePopulation,
FRDreesVQSsurvey2014,
FRDreesAPA2017,
FRDreesAPA,
FRGaliEUSilc,
sullivan,
description_sullivan,
overwrite = T)
View(FRGaliEUSilc)
load_all()
build()
library(pkgdown)
build_site()
build_site()
document()
build_site()
document()
build_site()
library(devtools)
load_all()
runExample()
library(tidyverse)
library(dplyr)
library(shiny)
library(shinydashboard)
library(plotly)
library(healthexpectancies)
runExample()
runApp('inst/shiny-examples/projprevalence')
runExample()
runApp('inst/shiny-examples/projprevalence')
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
sessionInfo()
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
qmortref <- FRInseeMortalityForecast2016 %>%
# on filtre selon l'âge et l'année
select(year,sex,age,qx) %>%
filter(age >= 60, age <= input$ageFinCalcul, year %in% c(refyear) ) %>%
# on ajoute les prévalences en projection
left_join(prevref, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
qmortref <- FRInseeMortalityForecast2016 %>%
# on filtre selon l'âge et l'année
select(year,sex,age,qx) %>%
filter(age >= 60, age <= 110, year %in% c(refyear) ) %>%
# on ajoute les prévalences en projection
left_join(prevref, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
qmortref <- FRInseeMortalityForecast2016 %>%
# on filtre selon l'âge et l'année
select(year,sex,age,qx) %>%
filter(age >= 60, age <= 110, year %in% c(2030) ) %>%
# on ajoute les prévalences en projection
left_join(prevref, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
refyear <- 2030
refyear <- 2017
vyear <- unique( c(refyear, 2030, 2020, 2025, 2030, 2035, 2040, 2050) )
vyear <- vyear[order(vyear)]
donneespop <- FRInseePopulationForecast2016 %>%
rename(age = age0101) %>%
mutate(year = as.numeric(year),
age = as.numeric( age ),
sex = as.factor(sex)) %>%
mutate(year = year-1) %>%
filter(age >= 60, year %in% c( vyear ) )
donneesprev <- rbind(
FRDreesVQSsurvey2014,
FRDreesAPA2017 %>% rename(limitationtype = typepresta)
) %>%
filter(limitationtype == input$limtype ) %>%
select(-age)
donneesprev <- rbind(
FRDreesVQSsurvey2014,
FRDreesAPA2017 %>% rename(limitationtype = typepresta)
) %>%
filter(limitationtype == "GALI" ) %>%
select(-age)
donneesregr <- donneespop %>%
mutate(agebracket = cut(age, breaks = c(seq(60,95,5),Inf), include.lowest = TRUE, right = FALSE)) %>%
filter(year == refyear, age>=60) %>%
left_join( donneesprev,   by = c("sex","agebracket") ) %>%
rename(prevalence.ref = prevalence)
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = case_when(
#input$approxPrev ~ prevalence_to_polynomial(age, prevalence.ref, weight=popx),
TRUE ~ prevalence_to_polynomial(prevalence = prevalence.ref,
agemin=min(donneesregr$age),
agemax=max(donneesregr$age),
weight=popx),
!input$approxPrev ~ prevalence.ref) ) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref) %>%
pivot_longer(cols=-c(sex,age),
names_to = "indicateur",
values_to = "prevalence")
prevalencesref <- donneesregr %>% group_by(sex) %>%
mutate(prev.approx = case_when(
#input$approxPrev ~ prevalence_to_polynomial(age, prevalence.ref, weight=popx),
TRUE ~ prevalence_to_polynomial(prevalence = prevalence.ref,
agemin=min(donneesregr$age),
agemax=max(donneesregr$age),
weight=popx),
FALSE ~ prevalence.ref) ) %>%
ungroup() %>%
select(sex, age, prev.approx, prevalence.ref) %>%
pivot_longer(cols=-c(sex,age),
names_to = "indicateur",
values_to = "prevalence")
prevref <- prevalencesref %>%
filter(indicateur == "prev.approx") %>%
rename(pix = prevalence) %>%
select(sex,age,pix)
qmortref <- FRInseeMortalityForecast2016 %>%
# on filtre selon l'âge et l'année
select(year,sex,age,qx) %>%
filter(age >= 60, age <= 110, year %in% c(refyear) ) %>%
# on ajoute les prévalences en projection
left_join(prevref, by = c("sex","age")) %>%
filter(!is.na(pix), !is.na(qx))
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, age <= input$ageFinCalcul, year %in% c( vyear[vyear != refyear] )
)
qmortproj <- FRInseeMortalityForecast2016 %>%
select(year,sex,age,qx) %>%
filter(age >= 60, age <= 110, year %in% c( vyear[vyear != refyear] ) )
projections <- prevalenceForecast( qmortref, qmortproj , input$optionProj,
includevars  = c("MeanDAx","MedianDAx","ModalDAx")) %>%
select(sex,age,year,ex,DFLEx,DLEx,pctDFLEx,pix,MeanDAx,MedianDAx,ModalDAx)
projections <- prevalenceForecast( qmortref, qmortproj , "CstDFLE",
includevars  = c("MeanDAx","MedianDAx","ModalDAx"))
tabref<-qmortref
tabproj<-qmortproj
hypo<-"CstDFLE"
includevars  = c("MeanDAx","MedianDAx","ModalDAx")
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
vardim
varkeep
tabDFLEref <- CompleteDFLEtable(tabref)
View(tabDFLEref)
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>% ###
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age)))
View(tabDFLEref)
varkeep
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
varkeep
hypo
hypo<-"cstDFLE"
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
varkeep
tabDFLEref <- CompleteDFLEtable(tabref)
# forecasted prevalences
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>% ###
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
tabDFLEproj <- CompleteDFLEtable( tabproj )
View(tabDFLEproj)
View(tabref)
View(tabproj)
View(tabproj)
View(tabref)
tabDFLEproj <- CompleteDFLEtable( tabproj )
View(tabDFLEproj)
View(tabref)
View(tabproj)
View(tabproj)
View(tabDFLEproj)
load_all()
tabDFLEref <- CompleteDFLEtable(tabref)
# forecasted prevalences
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>% ###
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
tabDFLEproj <- CompleteDFLEtable( tabproj )
View(tabDFLEproj)
tabDFLEref <- CompleteDFLEtable(tabref)
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>% ###
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
View(tabproj)
projections <- prevalenceForecast( qmortref, qmortproj , input$optionProj,
includevars  = c("MeanDAx","MedianDAx","ModalDAx")) %>%
select(sex,age,year,ex,DFLEx,DLEx,pctDFLEx,pix,MeanDAx,MedianDAx,ModalDAx)
projections <- prevalenceForecast( qmortref, qmortproj , "cstDFLE",
includevars  = c("MeanDAx","MedianDAx","ModalDAx")) %>%
select(sex,age,year,ex,DFLEx,DLEx,pctDFLEx,pix,MeanDAx,MedianDAx,ModalDAx)
projections <- prevalenceForecast( qmortref, qmortproj , "cstDFLE",
includevars  = c("MeanDAx","MedianDAx","ModalDAx"))
tabref<- qmortref
tabproj <-qmortproj
vardim <- intersect( c("sex","age","categ") , intersect(names(tabref), names(tabproj)) )
varkeep <- recode(hypo,
"cstDFLE" = "DFLEx",
"cstDLE" = "DLEx",
"cstPctDFLE" = "pctDFLEx",
"cstPrev" = "pix")
# DFLE, DLE and pctDFLE for reference year
tabDFLEref <- CompleteDFLEtable(tabref)
View(tabDFLEref)
tabproj <- tabproj %>%
filter(age %in% c( unique(tabref$age))) %>% ###
left_join(tabDFLEref[,c(vardim,varkeep)] , by = c(vardim) )
View(tabproj)
tabDFLEproj <- CompleteDFLEtable( tabproj )
View(tabDFLEproj)
View(tabDFLEproj)
load_all()
tabDFLEproj <- CompleteDFLEtable( tabproj )
View(tabDFLEproj)
projections <- prevalenceForecast( qmortref, qmortproj , "cstDFLE",
includevars  = c("MeanDAx","MedianDAx","ModalDAx")) %>%
select(sex,age,year,ex,DFLEx,DLEx,pctDFLEx,pix,MeanDAx,MedianDAx,ModalDAx)
runApp('inst/shiny-examples/projprevalence')
runApp('inst/shiny-examples/projprevalence')
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
runExample()
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
sessionInfo()
install()
check()
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
install.packages("rsconnect")
install.packages("rsconnect")
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
Y
install.packages("shiny")
shiny::runApp('inst/shiny-examples/projprevalence')
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
runApp('inst/shiny-examples/projprevalence')
rsconnect::appDependencies()
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
build()
options('repos')
build_package()
library(devtools)
options('repos')
build()
options('repos')
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
devtools::install_github()
sessionInfo()
devtools::install()
rsconnect::getAccountInfo()
setRepositories("https://github.com/patrickaubert/healthexpectancies")
setRepositories("https://github.com/patrickaubert/")
options("repos")
?setRepositories
setRepositories(addURLs="https://github.com/patrickaubert/")
setRepositories(addURLs="https://github.com/")
options("repos")
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
load_all()
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
rsconnect::deployApp(appDir = "C:/Users/PA/Documents/R/Projets/healthexpectancies/inst/shiny-examples/projprevalence", server = "shinyapps.io")
